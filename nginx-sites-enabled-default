server {
  listen 80 default_server;
  listen [::]:80 default_server;
  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  # TLS config by https://ssl-config.mozilla.org/
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
  ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
  ssl_session_timeout 1d;
  ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
  ssl_session_tickets off;

  ssl_dhparam /etc/ssl/dhparam;

  # intermediate configuration
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  ssl_prefer_server_ciphers off;

  resolver 1.1.1.1;

  
  # Locations
  
  # standard liveness test endpoint
  location /ping {
    return 200;
  }
  
  # deep ping test endpoint
  location /deepping {
    default_type text/html;
    add_header Content-Type text/html;
    return 200 "<!DOCTYPE html><h2>🐱‍👤Teapot Service Is UP 🚀🚀🚀!</h2>\n";
  }
  
  # our model app has to do something
  location / {
    default_type text/plain;
    add_header Content-Type text/plain;
    return 418 "418 I'm a teapot"; # RFC 2324
  }

}
